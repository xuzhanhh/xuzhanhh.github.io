{"data":{"site":{"siteMetadata":{"title":"酱香型猫砂盆","author":"xuzhanhh"}},"markdownRemark":{"id":"07067c2e-5f88-5126-8c49-2b35d67fd2ec","html":"<h2>前言</h2>\n<p>今天遇到了一个神奇的Popover组件bug，起初还想甩锅给dom-align的，后来定位发现弹出元素的宽高在显隐时宽高不同导致dom-align计算错误。经过debug发现这个宽高问题是absolute嵌套引起的</p>\n<p><strong>以下代码可以在这里：<a href=\"https://codesandbox.io/s/o4j6wq9oq9\">传送门</a> 试玩</strong></p>\n<h2>只有一层absolute的情况</h2>\n<p>正常文档流是等于父元素的宽度。<code class=\"language-text\">position: abusolute</code>让元素脱离了正常的文档流，宽度为最小宽度（子元素或内容撑起的宽度）。即默认宽度为body的width:100%</p>\n<h2>当有两层absolute嵌套时</h2>\n<p>具体代码如下:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//html</span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          删除后需点击「发布」才能生效哦～请问是否确定要删除？\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">//css</span>\n<span class=\"token punctuation\">.</span>wrapper <span class=\"token punctuation\">{</span>\n  position<span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  left<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n  top<span class=\"token punctuation\">:</span> <span class=\"token number\">140</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span>inner <span class=\"token punctuation\">{</span>\n  position<span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>得出的结果如下，子节点是被压缩到最小宽度</p>\n<p><img src=\"/images/image-20190320003513604.png\" alt=\"image-20190320003513604\"></p>\n<p>经过google得出以下结论</p>\n<blockquote>\n<p>Because they are already nested under position: absolute; parent i.e .container and since no width is assigned, it will take the minimal width and hence</p>\n</blockquote>\n<p>因为他被级联在position为absolute的父容器中所以他没有设定默认宽，因此他会选择最小的宽。</p>\n<p>当我知道这个结论是我是惊了，css真的比js难多了哈哈哈</p>\n<h2>拓展</h2>\n<p>从上面的结论我们不禁联想了，那么这个脱离了文档流的父容器要怎么样才能设定他的宽呢?</p>\n<p>我们把html改成如下结构</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">我可以把下面的内容撑开</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          删除后需点击「发布」才能生效哦～请问是否确定要删除？\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><img src=\"/images/image-20190320003441607.png\" alt=\"image-20190320003441607\"></p>\n<p>发现这个父容器的宽真的被撑开了，所以嵌套父容器的absolute子容器也有默认的宽度了，子容器里的内容的宽也能随着父容器的宽变化而变化</p>\n<h2>结论</h2>","timeToRead":1,"frontmatter":{"title":"神奇的CSS世界(1)","date":"March 20, 2019","spoiler":"嵌套absolute会发生什么有趣的事情？"},"fields":{"slug":"/css world(1)/"}}},"pageContext":{"slug":"/css world(1)/","previous":{"fields":{"slug":"/使用位操作快速实现互斥选项/"},"frontmatter":{"title":"使用位操作快速实现互斥选项"}},"next":{"fields":{"slug":"/why hooks(2)/"},"frontmatter":{"title":"why hooks(2) — useEffect是怎么跑起来的"}}}}